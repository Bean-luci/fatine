package _03_Types_Complexes;

import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.TreeMap;

public class _04_Collections_Java {

	public static void main(String[] args) {

		List <String> list = new ArrayList<String>();
		
		list.add("a");
		list.add("b");
		list.add("c");
		list.add("d");
		list.add("e");
		list.add("f");
		
		System.out.println("********Parcours for classique**********");
		for (int i=0; i<list.size();i++) {
			System.out.println(list.get(i));
		}
		System.out.println("********Parcours foreach*******");
		
		for(String str:list) {
			System.out.println(str);
		}
		
		System.out.println("Classe collections");
		System.out.println(list + "(list)");
		
		Collections.shuffle(list);
		System.out.println(list + "(shuffle)");
		
		Collections.rotate(list, 1);
		System.out.println(list +"(rotate 1)" );
		Collections.rotate(list, -1);
		System.out.println(list +"(rotate -1)" );
		
		Collections.reverse(list);
		System.out.println(list +"(reverse)" );
		
		/*
		 * Un tableau associatif (parfois appelé dictionnaire)ou "map" permet d'associer une clé à une valeur
		 * un tab associatif ne peut pas contenur de doublon de clé
		 */
		
		Map <Integer, String> map = new TreeMap <Integer, String>();
		//Map <Integer, String> map = new HashMap <Integer, String>();
		//Map <Integer, String> map = new LinkedHashMap <Integer, String>();
		
		map.put(1, "un");
		map.put(2, "deux");
		map.put(3, "trois");
		map.put(4, "quatre");
		map.put(5, "cinq");
		map.put(1, "doublon"); // la clé existe déja=) ne sera pas ajoute
		
		for (Integer item: map.keySet()) {
			System.out.print(item+ "");
		}
		
	}

}
